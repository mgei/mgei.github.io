<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>plotting on mgei.github.io</title>
    <link>https://mgei.github.io/tags/plotting/</link>
    <description>Recent content in plotting on mgei.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 03 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mgei.github.io/tags/plotting/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A look at Mintos.com loan characteristics and default rates</title>
      <link>https://mgei.github.io/post/mintos-stylized-facts/</link>
      <pubDate>Wed, 03 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mgei.github.io/post/mintos-stylized-facts/</guid>
      <description>What is Mintos? Mintos.com is a P2P lending platform. One can invest in loans offered by various loan organizers from various countries. Most loans are short-term and personal loans from FSU countries such as Georgia, Armenia, Russia, but also Spain or Indonesia etc. Many loans are very short term (1 month) but there’s also some with longer terms (several years). The majority of loans are denominated in Euro but the share of loans in other currencies is increasing.</description>
    </item>
    
    <item>
      <title>Plotting stock relative performance with R Plotly&#39;s rangeslider</title>
      <link>https://mgei.github.io/post/rangeslider-plotly/</link>
      <pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mgei.github.io/post/rangeslider-plotly/</guid>
      <description>Rangeslider option for stock market plots The one feature that I liked most about Google Finance was the ability to easily compare the performance of stocks over specified periods. In the application (Google used Flash) one could specify a stock and then add several others to it. The starting point would be zero (%) and the performance line the return given equal amount invested in both assets (performance in %).</description>
    </item>
    
    <item>
      <title>Fuel consumption by model and manufacturer</title>
      <link>https://mgei.github.io/post/fuel-consumption/</link>
      <pubDate>Wed, 12 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mgei.github.io/post/fuel-consumption/</guid>
      <description>European car fuel consumption data We found data from the Swiss automobile association TCS. While they provide a simple online tool Verbrauchskatelog, the data as a whole is downloadable only in PDF format here.
One can read tables from PDF documents in R using the tabulizer package. A great example for it’s use was published last year on R Views Player Data for the 2018 FIFA World Cup.
In my case, I struggled to even install tabulizer on Ubuntu, so I had revert to Windows.</description>
    </item>
    
    <item>
      <title>The Market as of June 2019, VIX and inverted yield curve</title>
      <link>https://mgei.github.io/post/market-june19/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mgei.github.io/post/market-june19/</guid>
      <description>What’s up?  US’ new deal policy  trade war China, US, Mexico import taxes and trade barriers (Huawei)  instability in middle East  Iran, Isreal, Saudi Arabia Turkey  EU  post parliament elections Austria Ibiza scandal Brexit  China more fragile than thought   Equities First let’s load some R packages. Note that for Quandl you need a API code that is for free but required registration.</description>
    </item>
    
    <item>
      <title>Europe&#39;s Largest Banks</title>
      <link>https://mgei.github.io/post/european-banks/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mgei.github.io/post/european-banks/</guid>
      <description>Originally published on RPubs: http://rpubs.com/mgei/european-banks
 Loading the packages and getting the data We use tidyquant.
We are interested in the following largest banks in Europe: Gross, grösser, HSBC: Die 50 grössten Banken, die Europa zu bieten hat
 HSBC BNP Paribas Crédit Agricole Santander Deutsche Bank  Also we would like to have a look at UBS and Credit Suisse for comparison. The data is ready on Yahoo Finance.</description>
    </item>
    
    <item>
      <title>Create a T-account plot for a balance sheet or income statement using ggplot2 in R</title>
      <link>https://mgei.github.io/post/t-account-ggplot2/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mgei.github.io/post/t-account-ggplot2/</guid>
      <description>Originally published on a Github gist: https://gist.github.com/mgei/14e44b7121fcee18f3809cf4bfd1af71
 Loading the packages and getting the data library(tidyverse) library(scales) Because the native quantmod::getFinancials() and tidyquant::tq_get(get = financials) do not work anymore (discontinued due to a change in Yahoo Finance), we use an alternative posted on Stackoverflow. Here’s the function:
scrapy_stocks &amp;lt;- function(stock){ if (&amp;quot;rvest&amp;quot; %in% installed.packages()) { library(rvest) }else{ install.packages(&amp;quot;rvest&amp;quot;) library(rvest) } for (i in 1:length(stock)) { tryCatch( { url &amp;lt;- &amp;quot;https://finance.</description>
    </item>
    
  </channel>
</rss>